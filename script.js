const video = document.getElementById('video');
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const virtualCanvas = document.getElementById('virtualCanvas');
const vCtx = virtualCanvas.getContext('2d');

let recording = false;

// üé• ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶∞‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶ö‡¶æ‡¶≤‡ßÅ
navigator.mediaDevices.getUserMedia({ video: true })
    .then(stream => {
        video.srcObject = stream;
    })
    .catch(err => console.error("Camera Access Denied!", err));

// üé® AI Object Detection ‡¶ì ‡¶≠‡¶æ‡¶∞‡ßç‡¶ö‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤ 3D ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®
function detectObject() {
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    virtualCanvas.width = video.videoWidth;
    virtualCanvas.height = video.videoHeight;

    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
    
    let frame = ctx.getImageData(0, 0, canvas.width, canvas.height);
    let length = frame.data.length;

    for (let i = 0; i < length; i += 4) {
        let red = frame.data[i];
        let green = frame.data[i + 1];
        let blue = frame.data[i + 2];

        // üîµ ‡¶®‡ßÄ‡¶≤ ‡¶∞‡¶ô ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§‡¶ï‡¶∞‡¶£ (Blue Object Tracking)
        if (blue > 150 && red < 100 && green < 100) {
            frame.data[i] = 255; // Red
            frame.data[i + 1] = 0;
            frame.data[i + 2] = 0;
        }
    }
    
    ctx.putImageData(frame, 0, 0);
    render3D();
    requestAnimationFrame(detectObject);
}

// üèóÔ∏è ‡¶≠‡¶æ‡¶∞‡ßç‡¶ö‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤ 3D ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®
function render3D() {
    vCtx.clearRect(0, 0, virtualCanvas.width, virtualCanvas.height);
    vCtx.fillStyle = "rgba(0, 255, 0, 0.5)";
    vCtx.fillRect(150, 100, 200, 200);
}

// üì∏ ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡¶ø‡¶Ç ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü
document.getElementById('record').addEventListener('click', () => {
    recording = !recording;
    if (recording) {
        alert("üé• ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ!");
    } else {
        alert("üõë ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡¶ø‡¶Ç ‡¶¨‡¶®‡ßç‡¶ß!");
    }
});

// üíæ ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶∏‡ßá‡¶≠
document.getElementById('save').addEventListener('click', () => {
    let img = canvas.toDataURL("image/png");
    localStorage.setItem("savedProject", img);
    alert("‚úÖ ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶∏‡ßá‡¶≠ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!");
});

// ‚¨áÔ∏è ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
document.getElementById('download').addEventListener('click', () => {
    let link = document.createElement('a');
    link.href = canvas.toDataURL("image/png");
    link.download = "ai_project.png";
    link.click();
});

// üÜï ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
document.getElementById('new').addEventListener('click', () => {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    vCtx.clearRect(0, 0, virtualCanvas.width, virtualCanvas.height);
    alert("üîÑ ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!");
});

// AI & 3D ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ
video.addEventListener('play', detectObject);
